###########################
# TOUHOU BACKGROUND JOBS #
###########################

kazehouri = { icon = colonist possible = { always = no } }
oni_king = { icon = colonist possible = { always = no } }
doorman = { icon = colonist possible = { always = no } }
gardener = { icon = colonist possible = { always = no } }
head_maid = { icon = colonist possible = { always = no } }
college_student = { icon = colonist possible = { always = no } }
subterranean_manager = { icon = colonist possible = { always = no } }
media_worker_thl = { icon = colonist possible = { always = no } }
yama = { icon = colonist possible = { always = no } }
boatman = { icon = colonist possible = { always = no } }
ghost_lead = { icon = colonist possible = { always = no } }
fire_trolley = { icon = colonist possible = { always = no } }
sun_bird = { icon = colonist possible = { always = no } }
god = { icon = colonist possible = { always = no } }

###替换原版
healthcare = {
    category = specialist

    swappable_data = {
        default = {
            condition_string = SPECIALIST_JOB_TRIGGER
            building_icon = building_medical_2
        }
        # Mutagenic Spa Attendant
        swap_type = {
            trigger = {
                healthcare_is_mutagenic_trigger = yes
            }
            name = bath_attendant
            desc = bath_attendant
            icon = bath_attendant
            building_icon = building_toxic_bath
            condition_string = SPECIALIST_JOB_TRIGGER
            weight = 5
        }
        # Genomic Researchers
        swap_type = {
            trigger = {
                healthcare_is_genomic_researcher_trigger = yes
            }
            name = genomic_researcher
            desc = genomic_researcher
            icon = genomic_researcher
            building_icon = building_genomic_facility
            condition_string = SPECIALIST_JOB_TRIGGER
            weight = 10
        }
    }

    tags = { pop_growth pop_assembly amenities }

    possible_pre_triggers = {
        has_owner = yes
        is_being_purged = no
        is_being_assimilated = no
        is_sapient = yes
    }

    possible_precalc = can_fill_specialist_job

    resources = {
        category = planet_doctors
        upkeep = {
            consumer_goods = 1
        }
        upkeep = {
            trigger = {
                exists = planet
                planet = {
                    healthcare_is_mutagenic_trigger = yes
                }
            }
            consumer_goods = 1
        }
        # Job Swap - Genomic Researcher
        produces = {
            trigger = {
                exists = planet
                planet = {
                    healthcare_is_genomic_researcher_trigger = yes
                }
            }
            society_research = 6
        }
        produces = {
            trigger = {
                exists = planet
                planet = {
                    healthcare_is_genomic_researcher_trigger = yes
                }
                exists = owner
                owner = {
                    has_completed_genetic_situation = yes
                }
            }
            society_research = 3
        }
        upkeep = {
            trigger = {
                exists = planet
                planet = {
                    healthcare_is_genomic_researcher_trigger = yes
                }
            }
            consumer_goods = 2
        }
        produces = {
            trigger = {
                exists = owner
                owner = { has_valid_civic = civic_penglai_medcine_corp }
            }
            trade = 4
        }
    }

    inline_script = "output/healthcare_triggered_modifiers"

    inline_script = "output/genomic_triggered_modifiers"

    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = { has_valid_civic = civic_penglai_medcine_corp }
        }
        planet_amenities_add = 200
        mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
    }
    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = { has_valid_civic = civic_penglai_medcine }
        }
        planet_amenities_add = 500
        mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
    }

    weight = {
        weight = @high_prio_specialist_job_weight
        mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
        modifier = {
            factor = 0.2
            has_citizenship_rights = no
            NOT = { has_trait = trait_mechanical }
        }
        modifier = {
            factor = 0.1
            can_take_servant_job = yes
        }
        modifier = {
            factor = 2
            owner = { has_valid_civic = civic_private_healthcare_corporate }
        }
        modifier = {
            factor = 1.5
            planet = {
                has_branch_office = yes
                branch_office_owner = {
                    has_valid_civic = civic_private_healthcare_corporate
                }
            }
        }
        modifier = {
            factor = 0.5
            is_enslaved = yes
            has_slavery_type = { type = slavery_indentured }
        }
    }


    weight = {
        weight = @high_prio_specialist_job_weight
        mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
        modifier = {
            factor = 0.2
            has_citizenship_rights = no
            NOT = { has_trait = trait_mechanical }
        }
        modifier = {
            factor = 0.1
            can_take_servant_job = yes
        }
        modifier = {
            factor = 2
            owner = { has_valid_civic = civic_private_healthcare_corporate }
        }
        modifier = {
            factor = 1.5
            planet = {
                has_branch_office = yes
                branch_office_owner = {
                    has_valid_civic = civic_private_healthcare_corporate
                }
            }
        }
        modifier = {
            factor = 0.5
            is_enslaved = yes
            has_slavery_type = { type = slavery_indentured }
        }
        modifier = {
            factor = 10
            planet = {
                free_amenities < 0
                has_available_jobs = healthcare
            }
        }
    }

    inline_script = "jobs/automodding_priority_amenities"

    promotion = {
        time = @standard_promotion_time
        effect = {
            pop_amount_change_category = {
                CATEGORY = specialist
                AMOUNT = local_pop_amount
            }
        }
    }
}

###档案管理员
touhou_archivist = {
    category = specialist
    swappable_data = {
        default = {
            condition_string = SPECIALIST_JOB_TRIGGER
            building_icon = building_master_archive
            icon = fe_archivist
        }
    }
    possible_pre_triggers = {
        has_owner = yes
        is_being_purged = no
        is_being_assimilated = no
        is_sapient = yes
    }

    possible_precalc = can_fill_specialist_job
    possible = {
        complex_specialist_job_check_trigger = yes
    }

    resources = {
        category = planet_researchers
        produces = {
            physics_research = 6
            engineering_research = 6
            society_research = 6
        }
        upkeep = {
            consumer_goods = 2
        }
        upkeep = {
            trigger = {
                planet = {
                    has_planet_flag = has_science_ministry
                }
            }
            consumer_goods = 1
        }
    }

    overlord_resources = {
        category = planet_requisitioned_research
        produces = {
            trigger = {
                planet = {
                    has_planet_flag = has_science_ministry
                }
            }
            physics_research = 3
            engineering_research = 3
            society_research = 3
        }
    }

    # triggered_pop_modifier = {
    #     potential = {
    #         planet = {
    #             exists = army_leader
    #             army_leader = {
    #                 has_trait = leader_trait_academia_recruiter
    #             }
    #         }
    #     }
    #     modifier = {
    #         pop_defense_armies_add = 1
    #     }
    # }

    weight = {
        weight = @specialist_job_weight
        mult = value:job_weights_research_modifier|JOB|archivist|
        modifier = {
            factor = 0.2
            has_citizenship_rights = no
            NOT = { has_trait = trait_mechanical }
        }
        modifier = {
            factor = 2
            has_living_standard = { type = living_standard_academic_privilege }
        }
        modifier = {
            factor = 0.1
            can_take_servant_job = yes
        }
        # modifier = {
        #     factor = 1.5
        #     has_job = touhou_archivist
        # }
        modifier = {
            factor = 0.8
            is_enslaved = yes
            has_slavery_type = { type = slavery_indentured }
        }
    }

    promotion = {
        time = @standard_promotion_time
        effect = {
            pop_amount_change_category = {
                CATEGORY = specialist
                AMOUNT = local_pop_amount
            }
        }
    }
}

#人偶师
dollmaker = {
    category = specialist
    condition_string = SPECIALIST_JOB_TRIGGER
    swappable_data = {
        default = {
            condition_string = SPECIALIST_JOB_TRIGGER
            building_icon = building_doll_assembly_plant
        }
    }
    possible_pre_triggers = {
        has_owner = yes
        is_being_purged = no
        is_being_assimilated = no
        is_sapient = yes
    }

    possible_precalc = can_fill_specialist_job

    possible = {
        OR = {
            is_robot_pop = no
            AND = {
                has_trait = trait_thl_doll
                owner = { has_technology = tech_doll_assembly_complex }
            }
            AND = {
                has_trait = trait_mechanical
                OR = {
                    owner = { has_technology = tech_synthetic_workers }
                    owner = { is_individual_machine = yes }
                }
            }
            AND = {
                has_trait = trait_machine_unit
                OR = {
                    owner = { has_technology = tech_synthetic_workers }
                    owner = { is_individual_machine = yes }
                }
            }
        }
    }

    planet_modifier = {
        doll_control_limit = 2000
    }

    triggered_planet_modifier = {
        potential = { owner = { has_technology = tech_automatic_dolls } }
        doll_control_limit = 2000
        #planet_doll_jobs_worker_produces_mult = 0.05
    }

    triggered_planet_modifier = {
        potential = { owner = { has_technology = tech_sapient_dolls } }
        doll_control_limit = 1000
        #planet_doll_jobs_specialist_produces_mult = 0.05
    }

    # Add growth from 0 to 25 depending on 'clone_pops_missing_per_vat'.
    triggered_planet_modifier = {
        potential = {
            check_variable_arithmetic = { which = value:doll_missing_per_maker value >= 22 }
        }
        planet_pop_assembly_add = 25
    }

    inline_script = {
        script = buildings/doll_maker_output
        UPPER_LIMIT = 22
        LOWER_LIMIT = 20
        GROWTH = 22
    }

    inline_script = {
        script = buildings/doll_maker_output
        UPPER_LIMIT = 20
        LOWER_LIMIT = 18
        GROWTH = 20
    }

    inline_script = {
        script = buildings/doll_maker_output
        UPPER_LIMIT = 18
        LOWER_LIMIT = 16
        GROWTH = 17
    }

    inline_script = {
        script = buildings/doll_maker_output
        UPPER_LIMIT = 16
        LOWER_LIMIT = 14
        GROWTH = 15
    }

    inline_script = {
        script = buildings/doll_maker_output
        UPPER_LIMIT = 14
        LOWER_LIMIT = 12
        GROWTH = 12
    }

    inline_script = {
        script = buildings/doll_maker_output
        UPPER_LIMIT = 12
        LOWER_LIMIT = 10
        GROWTH = 10
    }

    inline_script = {
        script = buildings/doll_maker_output
        UPPER_LIMIT = 10
        LOWER_LIMIT = 8
        GROWTH = 7
    }

    inline_script = {
        script = buildings/doll_maker_output
        UPPER_LIMIT = 8
        LOWER_LIMIT = 6
        GROWTH = 5
    }

    triggered_planet_modifier = {
        potential = {
            check_variable_arithmetic = { which = value:doll_missing_per_maker value <= 6 }
        }
        planet_pop_assembly_add = 2
    }

    resources = {
        category = planet_pop_assemblers
        upkeep = {
            trigger = {
                OR = {
                    planet = {
                        check_variable_arithmetic = { which = value:doll_missing_per_maker value > 0 }
                    }
                }
            }
            consumer_goods = 4
        }
    }

    weight = {
        weight = 500
        modifier = {
            factor = 10
            owner = { is_synthetic_empire = yes }
        }
    }

    promotion = {
        time = @standard_promotion_time
        effect = {
            pop_amount_change_category = {
                CATEGORY = specialist
                AMOUNT = local_pop_amount
            }
        }
    }
}

grower = {
    category = worker
    swappable_data = {
        default = {
            condition_string = WORKER_JOB_TRIGGER
            building_icon = building_food_processing_facility
            icon = xeno_zoo_keeper
        }
    }
    possible_pre_triggers = {
        has_owner = yes
        is_being_purged = no
        is_being_assimilated = no
        is_sapient = yes
    }

    possible_precalc = can_fill_worker_job
    possible = {
        hidden_trigger = { exists = owner }
        owner = {
            is_gestalt = no
        }
    }

    resources = {
        category = planet_farmers
        produces = {
            food = 4
            consumer_goods = 2
            trade = 2
        }
        produces = {
            trigger = {
                exists = owner
                owner = {
                    is_robot_empire = yes
                }
            }
            food = -1
        }
        produces = {
            trigger = {
                planet = {
                    has_planet_flag = has_produce_requisitorium
                }
            }
            food = @requisitorium_food_reduction
        }
        produces = {
            trigger = {
                planet = {
                    has_modifier = modifier_rich_mineral_garden
                }
            }
            minerals = 1
        }
    }

    overlord_resources = {
        category = planet_requisitioned_food
        produces = {
            trigger = {
                planet = {
                    has_planet_flag = has_produce_requisitorium
                }
            }
            food = @requisitorium_food_overlord
        }
    }

    triggered_planet_modifier = {
        planet_amenities_add = 500
        mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
    }

    weight = {
        weight = @worker_job_weight
        mult = value:job_weights_modifier|JOB|farmer|RESOURCE|food|
        modifier = {
            factor = 1.1
            owner = { has_valid_civic = civic_agrarian_idyll }
        }
        modifier = {
            factor = 10
            is_enslaved = yes
            can_take_servant_job = no
            NOT = { has_slavery_type = { type = slavery_indentured } }
        }
        modifier = {
            factor = 3
            OR = {
                is_non_sapient_robot = yes
                is_shackled_robot = yes
            }
            can_take_servant_job = no
            owner = { has_technology = tech_droid_workers }
        }
        modifier = {
            factor = 200
            OR = {
                is_non_sapient_robot = yes
                is_shackled_robot = yes
            }
            can_take_servant_job = no
            owner = { NOT = { has_technology = tech_droid_workers } }
        }
        modifier = {
            factor = 0.25
            can_take_servant_job = yes
        }
        modifier = {
            factor = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
            owner = { has_valid_civic = civic_agrarian_idyll }
        }
        # low income modifier
        modifier = {
            factor = 1.2
            exists = planet
            planet = {
                has_available_jobs = farmer
            }
            exists = owner
            owner = {
                is_ai = yes
                has_monthly_income = {
                    resource = food
                    value < 10
                }
            }
        }

        modifier = {
            factor = 0.5
            has_trait = trait_lithoid

            owner = {
                is_lithoid_empire = yes
                has_monthly_income = {
                    resource = food
                    value >= 0
                }
            }
        }
    }

    promotion = {
        time = @standard_promotion_time
        effect = {
            pop_amount_change_category = {
                CATEGORY = worker
                AMOUNT = local_pop_amount
            }
        }
    }
}

grower_drone = {
    category = simple_drone
    swappable_data = {
        default = {
            condition_string = DRONE_JOB_TRIGGER
            building_icon = building_food_processing_facility
            icon = xeno_zoo_keeper
        }
    }
    possible_pre_triggers = {
        has_owner = yes
        is_enslaved = no
        is_being_purged = no
        is_being_assimilated = no
        is_sapient = yes
    }

    possible_precalc = can_fill_drone_job

    resources = {
        category = planet_farmers
        produces = {
            food = 4
            consumer_goods = 4
            trade = 2
        }
        produces = {
            trigger = {
                exists = owner
                owner = {
                    is_robot_empire = yes
                }
            }
            food = -1
            energy = 1
        }
        produces = {
            trigger = {
                planet = {
                    has_planet_flag = has_produce_requisitorium
                }
            }
            food = @requisitorium_food_reduction
        }
    }

    overlord_resources = {
        category = planet_requisitioned_food
        produces = {
            trigger = {
                planet = {
                    has_planet_flag = has_produce_requisitorium
                }
            }
            food = @requisitorium_food_overlord
        }
    }

    triggered_planet_modifier = {
        planet_amenities_add = 500
        mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
    }

    weight = {
        weight = @simple_drone_job_weight
        mult = value:job_weights_modifier|JOB|agri_drone|RESOURCE|food|
        modifier = {
            factor = 0.9
            # NOT = { has_job = agri_drone }
            owner = {
                has_monthly_income = {
                    resource = food
                    value > 50
                }
            }
        }
        # modifier = {
        #     factor = 1.2
        #     has_job = agri_drone
        # }
        modifier = {
            factor = 0.9
            owner = {
                is_robot_empire = yes
            }
        }
        modifier = {
            factor = 1.1
            exists = owner
            years_passed < 1
            owner = { has_valid_civic = civic_machine_assimilator }
            has_trait = trait_cybernetic
        }

        modifier = {
            factor = 0.5
            has_trait = trait_lithoid

            owner = {
                is_lithoid_empire = yes
                has_monthly_income = {
                    resource = food
                    value >= 0
                }
            }
        }
    }

    promotion = {
        time = @standard_promotion_time
        effect = {
            pop_amount_change_category = {
                CATEGORY = simple_drone
                AMOUNT = local_pop_amount
            }
        }
    }
}

#铃奈庵员工
touhou_bookseller = {
    category = specialist
    swappable_data = {
        default = {
            condition_string = SPECIALIST_JOB_TRIGGER
            building_icon = building_suzunaan
            icon = fe_archivist
        }
    }
    possible_pre_triggers = {
        has_owner = yes
        is_being_purged = no
        is_being_assimilated = no
        is_sapient = yes
    }

    possible_precalc = can_fill_specialist_job
    possible = {
        complex_specialist_job_check_trigger = yes
    }

    resources = {
        category = planet_researchers
        produces = {
            physics_research = 4
            engineering_research = 4
            society_research = 6
            minor_artifacts = 0.5
        }
        upkeep = {
            consumer_goods = 2
        }
        upkeep = {
            trigger = {
                planet = {
                    has_planet_flag = has_science_ministry
                }
            }
            consumer_goods = 1
        }
    }

    overlord_resources = {
        category = planet_requisitioned_research
        produces = {
            trigger = {
                planet = {
                    has_planet_flag = has_science_ministry
                }
            }
            physics_research = 2
            engineering_research = 2
            society_research = 3
        }
    }

    triggered_pop_modifier = {
        potential = {
            planet = {
                exists = army_leader
                army_leader = {
                    has_trait = leader_trait_academia_recruiter
                }
            }
        }
        modifier = {
            #pop_defense_armies_add = 1
        }
    }

    planet_modifier = {
        planet_researchers_energy_produces_add = 0.2
        planet_researchers_produces_mult = 0.02
    }

    weight = {
        weight = @specialist_job_weight
        mult = value:job_weights_research_modifier|JOB|archivist|
        modifier = {
            factor = 0.2
            has_citizenship_rights = no
            NOT = { has_trait = trait_mechanical }
        }
        modifier = {
            factor = 2
            has_living_standard = { type = living_standard_academic_privilege }
        }
        modifier = {
            factor = 0.1
            can_take_servant_job = yes
        }
        # modifier = {
        #     factor = 1.5
        #     has_job = touhou_bookseller
        # }
        modifier = {
            factor = 0.8
            is_enslaved = yes
            has_slavery_type = { type = slavery_indentured }
        }
    }

    promotion = {
        time = @standard_promotion_time
        effect = {
            pop_amount_change_category = {
                CATEGORY = specialist
                AMOUNT = local_pop_amount
            }
        }
    }
}

#史官
touhou_historian = {
    category = specialist
    swappable_data = {
        default = {
            condition_string = SPECIALIST_JOB_TRIGGER
            building_icon = building_national_historial_archive
            icon = fe_archivist
        }
    }
    possible_pre_triggers = {
        has_owner = yes
        is_being_purged = no
        is_being_assimilated = no
        is_sapient = yes
    }

    possible_precalc = can_fill_specialist_job
    possible = {
        complex_specialist_job_check_trigger = yes
    }

    resources = {
        category = planet_culture_workers
        produces = {
            society_research = 1
            unity = 1
            minor_artifacts = 0.1
            mult = owner.trigger:num_ascension_perks
        }
        upkeep = {
            consumer_goods = 2
        }
    }

    country_modifier = {
        planet_administrators_produces_mult = 0.1
        planet_culture_workers_produces_mult = 0.1
        culture_workers_modifier_mult = 0.1
    }

    weight = {
        weight = @specialist_job_weight
        mult = value:job_weights_research_modifier|JOB|archivist|
        modifier = {
            factor = 0.2
            has_citizenship_rights = no
            NOT = { has_trait = trait_mechanical }
        }
        modifier = {
            factor = 2
            has_living_standard = { type = living_standard_academic_privilege }
        }
        modifier = {
            factor = 0.1
            can_take_servant_job = yes
        }
        # modifier = {
        #     factor = 1.5
        #     has_job = touhou_historian
        # }
        modifier = {
            factor = 0.8
            is_enslaved = yes
            has_slavery_type = { type = slavery_indentured }
        }
    }
    promotion = {
        time = @standard_promotion_time
        effect = {
            pop_amount_change_category = {
                CATEGORY = specialist
                AMOUNT = local_pop_amount
            }
        }
    }
}
angler = {
    category = worker
    swappable_data = {
        default = {
            condition_string = WORKER_JOB_TRIGGER
            building_icon = building_food_processing_facility
        }
    }

    possible_pre_triggers = {
        has_owner = yes
        is_being_purged = no
        is_being_assimilated = no
        is_sapient = yes
    }

    possible_precalc = can_fill_worker_job
    possible = {
        hidden_trigger = { exists = owner }
        owner = {
            is_gestalt = no
            #is_anglers_empire = yes
        }
    }

    resources = {
        category = planet_anglers
        produces = {
            food = 8
        }
        produces = {
            trigger = {
                has_councilor = { COUNCILOR = "councilor_anglers" }
            }

            food = @councilor_anglers_angler_food_bonus
            mult = value:councilor_level|TYPE|councilor_anglers|
        }
        produces = {
            trigger = {
                has_councilor = { COUNCILOR = "councilor_machine_anglers" }
            }

            food = @councilor_machine_anglers_angler_food_bonus
            mult = value:councilor_level|TYPE|councilor_machine_anglers|
        }
        produces = {
            trigger = {
                planet = {
                    has_planet_flag = has_produce_requisitorium
                }
            }
            food = @requisitorium_food_reduction
        }
        produces = {
            trade = 2
        }
    }

    overlord_resources = {
        category = planet_requisitioned_food
        produces = {
            trigger = {
                planet = {
                    has_planet_flag = has_produce_requisitorium
                }
            }
            food = @requisitorium_food_overlord
        }
    }

    triggered_planet_modifier = {
        potential = {
            exists = owner
            owner = { has_valid_civic = civic_agrarian_idyll }
        }
        planet_amenities_add = 200
        mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
    }

    weight = {
        weight = @worker_job_weight
        mult = value:job_weights_multiple_resources_modifier|JOB|angler|RESOURCE1|food|WEIGHT1|0.8|RESOURCE2|trade|WEIGHT2|0.2|
        modifier = {
            factor = 1.1
            owner = { has_valid_civic = civic_agrarian_idyll }
        }
        modifier = {
            factor = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
            owner = { has_valid_civic = civic_agrarian_idyll }
        }
        modifier = {
            factor = 10
            is_enslaved = yes
            can_take_servant_job = no
            NOT = { has_slavery_type = { type = slavery_indentured } }
        }
        modifier = {
            factor = 0.25
            can_take_servant_job = yes
        }
    }

    inline_script = "jobs/automodding_priority_food"

    promotion = {
        time = @standard_promotion_time
        effect = {
            pop_amount_change_category = {
                CATEGORY = worker
                AMOUNT = local_pop_amount
            }
        }
    }
}

maple_sugar_harvester = {
    category = specialist
    swappable_data = {
        default = {
            condition_string = SPECIALIST_JOB_TRIGGER
            building_icon = holding_tree_of_life_sapling
            icon = servant
        }
    }

    possible_pre_triggers = {
        has_owner = yes
        is_being_purged = no
        is_being_assimilated = no
        is_sapient = yes
    }

    possible_precalc = can_fill_specialist_job
    possible = {
        complex_specialist_job_check_trigger = yes
    }

    resources = {
        category = planet_rangers
        produces = {
            food = 4
            rare_crystals = 1
        }
        upkeep = {
            consumer_goods = 2
        }
    }

    triggered_planet_modifier = {
        potential = {
            always = yes
        }
        planet_amenities_add = 500
        mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
    }

    weight = {
        weight = @specialist_job_weight
        mult = value:job_weights_modifier|JOB|maple_sugar_harvester|RESOURCE|food|
        mult = value:job_weights_modifier|JOB|maple_sugar_harvester|RESOURCE|rare_crystals|
        modifier = {
            factor = 0.2
            has_citizenship_rights = no
            NOT = { has_trait = trait_mechanical }
        }
        modifier = {
            factor = 2
            has_living_standard = { type = living_standard_academic_privilege }
        }
        modifier = {
            factor = 0.1
            can_take_servant_job = yes
        }
        # modifier = {
        #     factor = 1.5
        #     has_job = maple_sugar_harvester
        # }
        modifier = {
            factor = 0.8
            is_enslaved = yes
            has_slavery_type = { type = slavery_indentured }
        }
    }

    promotion = {
        time = @standard_promotion_time
        effect = {
            pop_amount_change_category = {
                CATEGORY = specialist
                AMOUNT = local_pop_amount
            }
        }
    }
}

izakaya_worker = {
    category = specialist
    swappable_data = {
        default = {
            condition_string = SPECIALIST_JOB_TRIGGER
            building_icon = building_izakaya_2
            icon = servant
        }
    }

    possible_pre_triggers = {
        has_owner = yes
        is_being_purged = no
        is_being_assimilated = no
        is_sapient = yes
    }

    possible_precalc = can_fill_specialist_job
    possible = {
        entertainer_job_check_trigger = yes
    }

    resources = {
        category = planet_entertainers
        upkeep = {
            food = 6
        }
        produces = {
            trade = 8
        }
        produces = {
            trigger = {
                OR = {
                    AND = {
                        exists = owner
                        owner = {
                            any_owned_leader = {
                                has_trait = thl_leader_trait_izakaya_2
                            }
                        }
                    }
                    AND = {
                        exists = planet.branch_office_owner
                        planet.branch_office_owner = {
                            any_owned_leader = {
                                has_trait = thl_leader_trait_izakaya_2
                            }
                        }
                    }
                }
            }
            trade = 2
        }
        produces = {
            trigger = {
                OR = {
                    AND = {
                        exists = owner
                        owner = {
                            any_owned_leader = {
                                has_trait = thl_leader_trait_izakaya_2
                            }
                        }
                    }
                    AND = {
                        exists = planet.branch_office_owner
                        planet.branch_office_owner = {
                            any_owned_leader = {
                                has_trait = thl_leader_trait_izakaya_2
                            }
                        }
                    }
                }
            }
            trade = 4
        }
    }

    triggered_planet_modifier = {
        potential = {
            always = yes
        }
        planet_amenities_add = 1000
        mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
    }

    triggered_planet_modifier = {
        potential = {
            OR = {
                AND = {
                    exists = owner
                    owner = {
                        any_owned_leader = {
                            has_trait = thl_leader_trait_izakaya_2
                        }
                    }
                }
                AND = {
                    exists = planet.branch_office_owner
                    planet.branch_office_owner = {
                        any_owned_leader = {
                            has_trait = thl_leader_trait_izakaya_2
                        }
                    }
                }
            }
        }
        planet_amenities_add = 250
        mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
    }

    triggered_planet_modifier = {
        potential = {
            OR = {
                AND = {
                    exists = owner
                    owner = {
                        any_owned_leader = {
                            has_trait = thl_leader_trait_izakaya_3
                        }
                    }
                }
                AND = {
                    exists = planet.branch_office_owner
                    planet.branch_office_owner = {
                        any_owned_leader = {
                            has_trait = thl_leader_trait_izakaya_3
                        }
                    }
                }
            }
        }
        planet_amenities_add = 500
        mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
    }

    planet_modifier = {
        pop_growth_speed = 0.05
    }

    weight = {
        weight = @specialist_job_weight
        mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
        mult = value:job_weights_modifier|JOB|izakaya_worker|RESOURCE|trade|
        # # modifier = {
        #     factor = 5
        #     has_job = izakaya_worker
        # }
        # crisis purge
        modifier = {
            factor = 0.01
            exists = planet
            exists = planet.controller
            planet.controller = {
                OR = {
                    is_country_type = swarm
                    is_country_type = ai_empire
                }
            }
            OR = { # contingency won't purge itself
                NOT = { exists = event_target:custodian_bot }
                AND = {
                    exists = event_target:custodian_bot
                    NOT = { species = { is_same_value = event_target:custodian_bot } }
                }
            }
        }
    }

    promotion = {
        time = @standard_promotion_time
        effect = {
            pop_amount_change_category = {
                CATEGORY = specialist
                AMOUNT = local_pop_amount
            }
        }
    }
}

magician = {
    category = specialist
    swappable_data = {
        default = {
            condition_string = SPECIALIST_JOB_TRIGGER
            building_icon = building_magic_academy
        }
    }
    possible_pre_triggers = {
        has_owner = yes
        is_being_purged = no
        is_being_assimilated = no
        is_sapient = yes
    }

    possible = {
        NOT = {
            has_trait = trait_thl_magician
        }
        battle_thrall_job_check_trigger = yes
    }

    country_modifier = {
        country_naval_cap_add = 2
    }

    triggered_country_modifier = { #intentionally left in
        potential = {
            exists = planet
            planet = {
                exists = owner
                owner = { has_technology = "tech_ground_defense_planning" }
            }
        }
        modifier = {
            country_naval_cap_add = 2
        }
    }

    # pop_modifier = {
    #     pop_defense_armies_add = 3
    # }

    # triggered_pop_modifier = {
    #     potential = {
    #         exists = planet
    #         planet = {
    #             exists = leader
    #             leader = {
    #                 leader_class = commander
    #             }
    #         }
    #     }
    #     modifier = {
    #         pop_defense_armies_add = 2
    #     }
    # }

    resources = {
        category = planet_researchers
        produces = {
            physics_research = 6
            society_research = 6
        }
        upkeep = {
            consumer_goods = 2
        }
    }

    triggered_country_modifier = {
        modifier = {
            country_naval_cap_add = 1
        }
        mult = planet.modifier:job_researcher_naval_cap_add
    }

    weight = {
        weight = @ruler_job_weight
        mult = value:job_weights_research_modifier|JOB|researcher|
        modifier = {
            factor = 0.2
            has_citizenship_rights = no
            NOT = { has_trait = trait_mechanical }
        }
        modifier = {
            factor = 2
            has_living_standard = { type = living_standard_academic_privilege }
        }
        modifier = {
            factor = 0.1
            can_take_servant_job = yes
        }
        # modifier = {
        #     factor = 1.5
        #     has_job = magician
        # }
        modifier = {
            factor = 0.8
            is_enslaved = yes
            has_slavery_type = { type = slavery_indentured }
        }
    }

    promotion = {
        time = @standard_promotion_time
        effect = {
            pop_amount_change_category = {
                CATEGORY = specialist
                AMOUNT = local_pop_amount
            }
        }
    }
}