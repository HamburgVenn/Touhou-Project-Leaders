#
# These define the type of bypasses that exist in game. This is only the logical connection between systems.
# These can be added to megastructures.
#
# bypass_type = {
#	name = GATEWAY_GALACTIC		# the localization key used in triggers and effects for the type
#	is_pathfind = yes			# whether this type can be automatically used by the pathfinding (otherwise you'll have to right click the object containing it)
#	requires_exploration = no	# whether this bypass type needs to be 'seen' before it can be used
#	uses_action = no			# whether this type needs an action or can be used automagically
#	always_active = no			# whether bypasses of these types are automatically active on creation, or if they need to be researched/upgraded to be activated
#	windup_time = 0.0			# days preparing before travel, translated into ticks on load.
#	winddown_time = 0.0			# days preparing after travel, translated into ticks on load.
#	ftl_multiplier = 0			# 0 is supposed to mean instant, WARNING: not implemented correctly.
#	extends_sensors = yes		# whether you can "see through" the bypass and extends your sensor range to the other side
#	icon_frame = 25
#	remember_instances = no	# whether countries remember meeting a specific instance of that type, or if they just remember seeing the type in general
#	galactic_map_tooltip_header=GATEWAY_GALACTIC
#	galactic_map_tooltip_desc=GATEWAY_GALACTIC_DESC
#	connection_type = any_other
#	ftl_ship_effect	= "gateway_ftl_ship_effect_entity"		# what effect to spawn on the ship when they jump through the bypass
#	ftl_bypass_effect	= "gateway_ftl_bypass_effect_entity"	# what effect to spawn on the bypass when a ship jumps through
#	bypass_effect		= ""
#	animation_time = 3				# number of days to wait for the jump animation to be played
#	prerequisites = {
#		tech_gateway_activation
#	}
#	on_pre_explore = {					# an effect that is called just before the jump of a right click "explore" action of a fleet
#
#	}
#	country_can_use = {					# trigger to evaluate if a country can use bypasses of this type. this: country, from: (optional) system owner; default: { always = yes }
#	}
#	on_action = "on_entering_bypass"	# The name of the on-action event that will be fired upon entering FTL (if set)
#										# THIS = Fleet
#										# FROM = System jumping to
#										# FROMFROM = System jumped from
# }

reimu_gateway = {
	name = REIMU_GATEWAY_GALACTIC
	is_pathfind = yes
	uses_action = yes
	requires_exploration = no
	always_active = yes
	extends_sensors = no
	windup_time = 0
	winddown_time = 0
	ftl_multiplier = 0			# 0 means instant
	icon_frame = 25
	remember_instances = no	# whether countries remember meeting a specific instance of that type, or if they just remember seeing the type in general
	galactic_map_tooltip_header= REIMU_GATEWAY_GALACTIC
	galactic_map_tooltip_desc= REIMU_GATEWAY_GALACTIC_DESC
	connection_type = any_other
	animation_time = 1
	ftl_ship_effect = "gateway_ftl_ship_effect_entity"
	ftl_bypass_effect = "gateway_ftl_bypass_effect_entity"

	country_can_use = {
		any_owned_leader = {
			has_trait = thl_leader_trait_fly
		}
	}

	on_action = "on_entering_reimu_gateway"
}

tewi_rabbithole = {
	name = TEWI_RABBITHOLE_GALACTIC
	is_pathfind = yes
	uses_action = no
	requires_exploration = yes
	always_active = yes
	windup_time = 0
	winddown_time = 0
	ftl_multiplier = 0
	extends_sensors = yes
	icon_frame = 12
	remember_instances = yes
	animation_time = 1
	galactic_map_tooltip_header = TEWI_RABBITHOLE_GALACTIC
	galactic_map_tooltip_desc = TEWI_RABBITHOLE_GALACTIC_DESC
	connection_type = one_to_one
	ftl_ship_effect = "wormhole_ftl_ship_effect_entity"
	ftl_bypass_effect = "wormhole_ftl_bypass_effect_entity"
	can_bypass_be_locked = yes

	prerequisites = {
		tech_wormhole_stabilization
	}

	potential = {
		always = yes
	}
	on_action = "on_entering_wormhole"
}
